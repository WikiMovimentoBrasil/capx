# Generated by Django 4.2.11 on 2024-04-25 00:18

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    replaces = [('events', '0002_eventorganizations_eventparticipant_events_and_more'), ('events', '0003_alter_events_created_at_alter_events_creator_and_more'), ('events', '0004_eventorganizations_confirmed_organization_and_more'), ('events', '0005_remove_events_openstreetmap_node_id_and_more'), ('events', '0006_alter_events_openstreetmap_id'), ('events', '0007_alter_events_openstreetmap_id')]

    dependencies = [
        ('skills', '0002_alter_skill_skill_wikidata_item'),
        ('orgs', '0005_alter_organization_territory'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('events', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='EventOrganizations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('organizer', 'Organizer'), ('sponsor', 'Sponsor'), ('supporter', 'Supporter')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='EventParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('organizer', 'Organizer'), ('committee', 'Committee'), ('volunteer', 'Volunteer')], max_length=20)),
                ('confirmed_organizer', models.BooleanField(default=False)),
                ('confirmed_participant', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Events',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Event Name')),
                ('type_of_location', models.CharField(choices=[('virtual', 'Virtual'), ('in_person', 'In Person'), ('hybrid', 'Hybrid')], max_length=20)),
                ('openstreetmap_node_id', models.CharField(blank=True, max_length=128, verbose_name='OpenStreetMap Node ID')),
                ('url', models.URLField(blank=True)),
                ('wikidata_qid', models.CharField(blank=True, max_length=10, validators=[django.core.validators.RegexValidator(message='Invalid Wikidata Qid format. The format should be Q12345', regex='^Q[1-9]\\d*$')])),
                ('time_begin', models.DateTimeField()),
                ('time_end', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='events_created', to=settings.AUTH_USER_MODEL, verbose_name='Event Creator')),
                ('organizations', models.ManyToManyField(through='events.EventOrganizations', to='orgs.organization')),
                ('related_skills', models.ManyToManyField(blank=True, to='skills.skill')),
                ('team', models.ManyToManyField(related_name='team_members', through='events.EventParticipant', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.DeleteModel(
            name='Event',
        ),
        migrations.AddField(
            model_name='eventparticipant',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.events'),
        ),
        migrations.AddField(
            model_name='eventparticipant',
            name='participant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='eventorganizations',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.events'),
        ),
        migrations.AddField(
            model_name='eventorganizations',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='orgs.organization'),
        ),
        migrations.AlterField(
            model_name='events',
            name='organizations',
            field=models.ManyToManyField(through='events.EventOrganizations', to='orgs.organization', verbose_name='Event Organizations'),
        ),
        migrations.AlterField(
            model_name='events',
            name='related_skills',
            field=models.ManyToManyField(blank=True, to='skills.skill', verbose_name='Related Skills'),
        ),
        migrations.AlterField(
            model_name='events',
            name='team',
            field=models.ManyToManyField(related_name='team_members', through='events.EventParticipant', to=settings.AUTH_USER_MODEL, verbose_name='Event Team'),
        ),
        migrations.AlterField(
            model_name='events',
            name='time_begin',
            field=models.DateTimeField(verbose_name='Start Time'),
        ),
        migrations.AlterField(
            model_name='events',
            name='time_end',
            field=models.DateTimeField(verbose_name='End Time'),
        ),
        migrations.AlterField(
            model_name='events',
            name='type_of_location',
            field=models.CharField(choices=[('virtual', 'Virtual'), ('in_person', 'In Person'), ('hybrid', 'Hybrid')], max_length=20, verbose_name='Type of Location'),
        ),
        migrations.AlterField(
            model_name='events',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='Updated At'),
        ),
        migrations.AlterField(
            model_name='events',
            name='url',
            field=models.URLField(blank=True, verbose_name='Event URL'),
        ),
        migrations.AlterField(
            model_name='events',
            name='wikidata_qid',
            field=models.CharField(blank=True, max_length=10, validators=[django.core.validators.RegexValidator(message='Invalid Wikidata Qid format. The format should be Q12345', regex='^Q[1-9]\\d*$')], verbose_name='Wikidata Qid'),
        ),
        migrations.AddField(
            model_name='eventorganizations',
            name='confirmed_organization',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='eventorganizations',
            name='confirmed_organizer',
            field=models.BooleanField(default=False),
        ),
        migrations.RemoveField(
            model_name='events',
            name='openstreetmap_node_id',
        ),
        migrations.AddField(
            model_name='events',
            name='openstreetmap_id',
            field=models.URLField(blank=True, validators=[django.core.validators.RegexValidator(message='Invalid OpenStreetMap ID format. The format should be https://www.openstreetmap.org/(way|node|relation)/12345', regex='^https://www.openstreetmap.org/(node|way|relation)/\\d+$')], verbose_name='OpenStreetMap ID'),
        ),
    ]
